{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bjornjansson/Desktop/max22/BJ/eventTest1/pages/events/[eventId].js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { getEventById } from '../../dummy-data';\nimport EventSummary from '../../components/event-detail/event-summary';\nimport EventLogistics from '../../components/event-detail/event-logistics';\nimport EventContent from '../../components/event-detail/event-content'; // import ErrorAlert from '../../components/ui/error-alert';\n\nfunction EventDetailPage() {\n  _s();\n\n  var router = useRouter();\n  var eventId = router.query.eventId;\n  var event = getEventById(eventId);\n\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No event found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventDetailPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = EventDetailPage;\nexport default EventDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"sources":["/Users/bjornjansson/Desktop/max22/BJ/eventTest1/pages/events/[eventId].js"],"names":["Fragment","useRouter","getEventById","EventSummary","EventLogistics","EventContent","EventDetailPage","router","eventId","query","event","title","date","location","image","description"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,YAAP,MAAyB,6CAAzB,C,CACA;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,MAAMO,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAaD,OAA7B;AACA,MAAME,KAAK,GAAGR,YAAY,CAACM,OAAD,CAA1B;;AAEA,MAAI,CAACE,KAAL,EAAY;AACV,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAKD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,MAAA,OAAO,EAAEF,KAAK,CAACG,QAFjB;AAGE,MAAA,KAAK,EAAEH,KAAK,CAACI,KAHf;AAIE,MAAA,QAAQ,EAAEJ,KAAK,CAACC;AAJlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,YAAD;AAAA,6BACE;AAAA,kBAAID,KAAK,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA5BQT,e;UACQL,S;;;KADRK,e;AA8BT,eAAeA,eAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useRouter } from 'next/router';\n\nimport { getEventById } from '../../dummy-data';\nimport EventSummary from '../../components/event-detail/event-summary';\nimport EventLogistics from '../../components/event-detail/event-logistics';\nimport EventContent from '../../components/event-detail/event-content';\n// import ErrorAlert from '../../components/ui/error-alert';\n\nfunction EventDetailPage() {\n  const router = useRouter();\n\n  const eventId = router.query.eventId;\n  const event = getEventById(eventId);\n\n  if (!event) {\n    return (\n      \n        <p>No event found!</p>\n   \n    );\n  }\n\n  return (\n    <Fragment>\n      <EventSummary title={event.title} />\n      <EventLogistics\n        date={event.date}\n        address={event.location}\n        image={event.image}\n        imageAlt={event.title}\n      />\n      <EventContent>\n        <p>{event.description}</p>\n      </EventContent>\n    </Fragment>\n  );\n}\n\nexport default EventDetailPage;\n\n"]},"metadata":{},"sourceType":"module"}